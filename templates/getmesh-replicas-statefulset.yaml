apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "getmesh.fullname" . }}-replicas
  labels:
    app.kubernetes.io/name: {{ include "getmesh.name" . }}
    helm.sh/chart: {{ include "getmesh.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: getmesh-replicas
spec:
  {{- if .Values.getmesh.cluster.enabled }}
  replicas: {{ .Values.getmesh.cluster.replicas }}
  {{- else}}
  replicas: 0
  {{- end}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "getmesh.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: getmesh-replicas
  serviceName: "getmesh-replicas"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "getmesh.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: getmesh-replicas
        app.kubernetes.io/part-of: getmesh-api
    spec:
      terminationGracePeriodSeconds: 15
      initContainers:
      - name: init
        image: alpine
        command: ["/bin/sh", "/usr/local/bin/mesh-init-slave-node.sh"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: getmesh-uploads
          mountPath: /uploads
          subPath: {{ template "getmesh.fullname.no.override" . }}-uploads
        - name: getmesh-config
          mountPath: /usr/local/bin
        - name: getmesh-data
          mountPath: /graphdb
          subPath: graphdb
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh", "/usr/local/bin/mesh-startup-slave-node.sh"]
        env:
         - name: "MESH_INITIAL_ADMIN_PASSWORD"
           valueFrom:
            secretKeyRef:
              name: {{ template "getmesh.fullname" . }}
              key: mesh-initial-admin-password
         - name: MESH_START_IN_READ_ONLY
           value: "true"
        {{- range $name, $value := .Values.getmesh.coreEnvironmentVariables }}
         - name: {{ tpl $name $ }}
           value: {{ tpl $value $ | quote }}
        {{- end }}
        {{- range $name, $value := .Values.getmesh.additionalEnvironmentVariables }}
         - name: {{ tpl $name $ }}
           value: {{ tpl $value $ | quote }}
        {{- end }}
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: monitoring
            containerPort: 8081
            protocol: TCP
          - name: obinary
            containerPort: 2424
            protocol: TCP
          - name: ohttp
            containerPort: 2480
            protocol: TCP
          - name: hazelcast
            containerPort: 5701
            protocol: TCP
        livenessProbe:
          httpGet:
            path: {{ .Values.getmesh.replicas.livenessProbe.httpGet.path | default "/api/v2/health/live" }}
            port: http
          initialDelaySeconds: {{ .Values.getmesh.replicas.livenessProbe.initialDelaySeconds | default 60 }}
          periodSeconds: {{ .Values.getmesh.replicas.livenessProbe.periodSeconds | default 20 }}
          failureThreshold: {{ .Values.getmesh.replicas.livenessProbe.failureThreshold | default 6 }}
        readinessProbe:
          httpGet:
            path: {{ .Values.getmesh.replicas.readinessProbe.httpGet.path | default "/api/v2/health/ready" }}
            port: http
          initialDelaySeconds:  {{ .Values.getmesh.replicas.readinessProbe.initialDelaySeconds | default 45 }}
          periodSeconds:  {{ .Values.getmesh.replicas.readinessProbe.initialDelaySeconds | default 20 }}
          failureThreshold:  {{ .Values.getmesh.replicas.readinessProbe.initialDelaySeconds | default 6 }}
        resources:
{{ toYaml .Values.getmesh.replicas.resources | indent 12 }}
        volumeMounts:
          - name: getmesh-uploads
            mountPath: /uploads
            subPath: {{ template "getmesh.fullname.no.override" . }}-uploads
          - name: getmesh-config
            mountPath: /usr/local/bin
          - name: getmesh-config
            mountPath: /config/keystore.jceks
            subPath: keystore.jceks
          - name: getmesh-config
            mountPath: /config/default-distributed-db-config.json
            subPath: default-distributed-db-config.json
          - name: getmesh-config
            mountPath: /config/hazelcast.xml
            subPath: hazelcast.xml
          - name: getmesh-config
            mountPath: /config/logback.xml
            subPath: logback.xml
          - name: getmesh-data
            mountPath: /graphdb
            subPath: graphdb
      securityContext: # mesh user/group
        runAsGroup: 1000
        runAsUser: 1000
        fsGroup: 1000
      volumes:
      - name: getmesh-config
        configMap:
          defaultMode: 0774
          name: {{ template "getmesh.fullname" . }}-config
      {{- if and (eq .Values.persistence.nfs.enabled true) (eq .Values.persistence.enabled true) }}
      - name: getmesh-uploads
        persistentVolumeClaim:
          claimName: {{ template "getmesh.fullname.no.override" . }}-uploads
      {{- else }}
      - name: getmesh-uploads
        emptyDir: {}
      {{- end }}
      - name: getmesh-data
        emptyDir: {}
      {{- if .Values.getmesh.replicas.tolerations }}
      tolerations:
      {{ toYaml .Values.getmesh.replicas.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.getmesh.replicas.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.getmesh.replicas.nodeSelector | indent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "getmesh.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
